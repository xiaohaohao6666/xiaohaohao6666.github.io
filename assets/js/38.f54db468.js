(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{171:function(t,a,e){"use strict";e.r(a);var r=e(0),s=Object(r.a)({},function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"实例对象与-new-命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实例对象与-new-命令","aria-hidden":"true"}},[t._v("#")]),t._v(" 实例对象与 new 命令")]),t._v(" "),e("h3",{attrs:{id:"javascript-语言具有很强的面向对象编程能力，本章介绍-javascript-面向对象编程的基础知识。"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#javascript-语言具有很强的面向对象编程能力，本章介绍-javascript-面向对象编程的基础知识。","aria-hidden":"true"}},[t._v("#")]),t._v(" JavaScript 语言具有很强的面向对象编程能力，本章介绍 JavaScript 面向对象编程的基础知识。")]),t._v(" "),e("h2",{attrs:{id:"_1-对象是什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-对象是什么","aria-hidden":"true"}},[t._v("#")]),t._v(" 1.对象是什么 ?")]),t._v(" "),e("h4",{attrs:{id:"面向对象编程-object-oriented-programming-oop-是目前主流的编程范式。其中-面向对象编程具有灵活-代码可复用-高度模块化-高内聚-低耦合-特点-容易维护和开发"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#面向对象编程-object-oriented-programming-oop-是目前主流的编程范式。其中-面向对象编程具有灵活-代码可复用-高度模块化-高内聚-低耦合-特点-容易维护和开发","aria-hidden":"true"}},[t._v("#")]),t._v(" 面向对象编程(Object Oriented Programming, OOP)是目前主流的编程范式。其中,面向对象编程具有灵活,代码可复用,高度模块化(高内聚,低耦合)特点,容易维护和开发,")]),t._v(" "),e("h4",{attrs:{id:"那么-对象-object-到底是什么"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#那么-对象-object-到底是什么","aria-hidden":"true"}},[t._v("#")]),t._v(' 那么,"对象"(object)到底是什么?')]),t._v(" "),e("h3",{attrs:{id:"_1-对象是单个实物的抽象-当实物被抽象成对象-实物之间的关系就变成对象之间的关系-从而就可以模拟现实情况-针对对象进行编程。"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-对象是单个实物的抽象-当实物被抽象成对象-实物之间的关系就变成对象之间的关系-从而就可以模拟现实情况-针对对象进行编程。","aria-hidden":"true"}},[t._v("#")]),t._v(" (1)对象是单个实物的抽象: 当实物被抽象成对象,实物之间的关系就变成对象之间的关系, 从而就可以模拟现实情况, 针对对象进行编程。")]),t._v(" "),e("h3",{attrs:{id:"_2-对象是一个容器-封装了属性-property-和方法-method-。"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-对象是一个容器-封装了属性-property-和方法-method-。","aria-hidden":"true"}},[t._v("#")]),t._v(" (2)对象是一个容器, 封装了属性(property)和方法(method)。")]),t._v(" "),e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[t._v("例如document对象")]),t._v(" "),e("p",[t._v("document对象继承了EventTarget接口、Node接口、ParentNode接口。这意味着，这些接口的方法都可以在document对象上调用。除此之外，document对象还有很多自己的属性和方法。")])]),t._v(" "),e("h2",{attrs:{id:"_2-构造函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-构造函数","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.构造函数")]),t._v(" "),e("h2",{attrs:{id:"_3-new-命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-new-命令","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.new 命令")]),t._v(" "),e("h3",{attrs:{id:"_3-1-基本用法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-基本用法","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.1 基本用法")]),t._v(" "),e("h3",{attrs:{id:"_3-2-new-命令的原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-new-命令的原理","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.2 new 命令的原理")]),t._v(" "),e("h3",{attrs:{id:"_3-3-new-target"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-new-target","aria-hidden":"true"}},[t._v("#")]),t._v(" 3.3 new.target")]),t._v(" "),e("h2",{attrs:{id:"_4-object-create-创建实例对象"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-object-create-创建实例对象","aria-hidden":"true"}},[t._v("#")]),t._v(" 4.Object.create() 创建实例对象")])])},[],!1,null,null,null);a.default=s.exports}}]);